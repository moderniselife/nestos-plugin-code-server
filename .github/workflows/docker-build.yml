name: Build and Push to GHCR

on:
  push:
    branches:
      - master
    paths:
      - "Dockerfile*"
      - "root/**"
      - ".github/workflows/docker-build.yml"
  pull_request:
    branches:
      - master
    paths:
      - "Dockerfile*"
      - "root/**"
      - ".github/workflows/docker-build.yml"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=long

      - name: Build and push amd64
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}-amd64
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push aarch64
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.aarch64
          platforms: linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}-build-aarch64
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push armv7
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.armv7
          platforms: linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}-build-armv7
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create and push manifest
        if: github.event_name != 'pull_request'
        run: |
          for tag in $(echo "${{ steps.meta.outputs.tags }}" | tr '\n' ' '); do
            # Create manifest list
            docker buildx imagetools create -t ${tag} \
              ${tag}-amd64 \
              ${tag}-build-aarch64 \
              ${tag}-build-armv7

            # Remove build tags
            docker buildx imagetools rm ${tag}-amd64
            docker buildx imagetools rm ${tag}-build-aarch64
            docker buildx imagetools rm ${tag}-build-armv7
          done
