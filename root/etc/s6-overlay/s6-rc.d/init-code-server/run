#!/usr/bin/with-contenv bash
# shellcheck shell=bash

mkdir -p /config/logs
exec 1> >(tee -a /config/logs/init.log)
exec 2> >(tee -a /config/logs/init.log >&2)

echo "[$(date)] Starting initialization..."
echo "[$(date)] Running as user: $(whoami)"
echo "[$(date)] Current directory: $(pwd)"

echo "[$(date)] Creating required directories..."
for dir in "/config/extensions" "/config/data" "/config/workspace" "/config/.ssh" "/workspace"; do
    if ! mkdir -p "$dir"; then
        echo "[$(date)] ERROR: Failed to create directory: $dir"
        exit 1
    fi
done

echo "[$(date)] Setting up sudo access if configured..."
if [[ -n "${SUDO_PASSWORD}" ]] || [[ -n "${SUDO_PASSWORD_HASH}" ]]; then
    echo "[$(date)] Setting up sudo access"
    if ! grep -q 'abc' /etc/sudoers; then
        echo "[$(date)] Adding abc to sudoers"
        if ! echo "abc ALL=(ALL:ALL) ALL" >> /etc/sudoers; then
            echo "[$(date)] ERROR: Failed to modify sudoers file"
            exit 1
        fi
    fi
    if [[ -n "${SUDO_PASSWORD_HASH}" ]]; then
        echo "[$(date)] Setting sudo password using sudo password hash"
        if ! sed -i "s|^abc:\!:|abc:${SUDO_PASSWORD_HASH}:|" /etc/shadow; then
            echo "[$(date)] ERROR: Failed to set password hash"
            exit 1
        fi
    else
        echo "[$(date)] Setting sudo password using SUDO_PASSWORD env var"
        if ! echo -e "${SUDO_PASSWORD}\n${SUDO_PASSWORD}" | passwd abc; then
            echo "[$(date)] ERROR: Failed to set password"
            exit 1
        fi
    fi
fi

echo "[$(date)] Setting up shell configuration..."
if [[ ! -f /config/.bashrc ]]; then
    if ! cp /root/.bashrc /config/.bashrc; then
        echo "[$(date)] ERROR: Failed to copy .bashrc"
        exit 1
    fi
fi

if [[ ! -f /config/.profile ]]; then
    if ! cp /root/.profile /config/.profile; then
        echo "[$(date)] ERROR: Failed to copy .profile"
        exit 1
    fi
fi

# fix permissions
PUID=${PUID:-911}
echo "[$(date)] Checking ownership of files..."
echo "[$(date)] Expected PUID: ${PUID}"
echo "[$(date)] Current ownership of /config/.profile: $(stat -c %u /config/.profile)"

if [[ ! "$(stat -c %u /config/.profile)" == "${PUID}" ]]; then
    echo "[$(date)] Change in ownership detected, updating file permissions..."
    echo "[$(date)] This could take some time"
    
    # Set ownership of config directory
    if ! find /config -path "/config/workspace" -prune -o -exec lsiown abc:abc {} +; then
        echo "[$(date)] ERROR: Failed to set ownership of config files"
        exit 1
    fi
    
    # Set ownership of workspace directories
    if ! lsiown abc:abc /config/workspace; then
        echo "[$(date)] ERROR: Failed to set ownership of config workspace"
        exit 1
    fi
    if ! lsiown -R abc:abc /workspace; then
        echo "[$(date)] ERROR: Failed to set ownership of workspace"
        exit 1
    fi
fi

echo "[$(date)] Setting SSH directory permissions..."
if ! chmod 700 /config/.ssh; then
    echo "[$(date)] ERROR: Failed to set SSH directory permissions"
    exit 1
fi

if [[ -n "$(ls -A /config/.ssh)" ]]; then
    if ! find /config/.ssh/ -type d -exec chmod 700 '{}' \; || \
       ! find /config/.ssh/ -type f -exec chmod 600 '{}' \; || \
       ! find /config/.ssh/ -type f -iname '*.pub' -exec chmod 644 '{}' \;; then
        echo "[$(date)] ERROR: Failed to set SSH file permissions"
        exit 1
    fi
fi

echo "[$(date)] Final permission check..."
echo "Config directory permissions:"
ls -la /config/
echo "Workspace directory permissions:"
ls -la /workspace/

echo "[$(date)] Environment variables:"
env | grep -v PASSWORD

echo "[$(date)] Disk space:"
df -h

echo "[$(date)] Memory usage:"
free -h

echo "[$(date)] Initialization complete."
